# 1. Build base image with Docker
# 2. Build spack packages and save to binary cache
# 3. Build CI packages with dependencies for that package only
# 4. Build full container with all of Jopa
# 5. Convert Jopa docker container to Apptainer

stages:
    - setup
    - base
    - generate
    - spack-build
    - package-build
    - docker
    - apptainer
    - clean

variables:
    DOCKER_REGISTRY: '172.17.0.2:5000'
    DOCKER_PERSIST: '/scratch/gitlab-runner/'
    CI_OUTDIR: '${DOCKER_PERSIST}/${CI_PROJECT_PATH}/${CI_COMMIT_SHA}'
    SPACK_CACHE: '${DOCKER_PERSIST}/${CI_PROJECT_PATH}/spack'
    MAMBA_REPO: 'file://${DOCKER_PERSIST}/bom/ngm/conda-pkgs/pkgs'

setup:
    stage: setup
    tags: [docker]
    script:
        - mkdir -p "${SPACK_CACHE}"
        - chmod a+rwX "$SPACK_CACHE"

# Base docker image, used for building the Spack packages
docker build spack-base:
    stage: base
    tags: [docker]
    image: &kaniko_image
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    script: &kaniko_build
        - mkdir -p /kaniko/.docker
        - |
            cat > /kaniko/.docker/config.json <<EOF
            {"auths": {
                "$CI_DEPENDENCY_PROXY_SERVER": {
                    "auth": "$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')"
                }
            }}
            EOF
        - /kaniko/executor
            --context "${CI_PROJECT_DIR}"
            --dockerfile "${CI_PROJECT_DIR}/containers/${DOCKERFILE}"
            --destination "${DOCKER_REGISTRY}/${DEST}"
            --build-arg "DOCKER_REGISTRY=${DOCKER_REGISTRY}"
            --build-arg "SPACK_CACHE=${SPACK_CACHE}"
            --build-arg "CONTAINER_ENV=${CONTAINER_ENV}"
            --build-arg "MAMBA_REPO=${MAMBA_REPO}"
            --cache=true
    variables:
        DOCKERFILE: base.docker
        DEST: spack-base:latest

# Generate build tasks for Spack packages
generate spack packages:
    stage: generate
    tags: [docker]
    image: 
        name: localhost:5000/spack-base:latest
        entrypoint: [""]
        pull_policy: always
    script:
        - /bin/entrypoint.sh ./ci/generate.sh
    artifacts:
      paths:
        - "$CI_PROJECT_DIR/artifacts"
      expire_in: 1 day

# Build Spack packages
spack build:
    stage: package-build
    trigger:
      include:
        - artifact: artifacts/pipeline.yml
          job: generate
      strategy: depend

# Build Docker containers
docker build containers:
    stage: docker
    image: *kaniko_image
    script: *kaniko_build
    variables:
        DOCKERFILE: spack-env.docker
        ENV: lfric-v0
        CONCRETE_ENV: lfric-v0-gcc@8.5.0-openmpi@4.1.4
        DEST: lfric-v0-gcc-openmpi:latest

# Build Apptainer containers
apptainer build containers:
    stage: apptainer
    tags: [docker]
    image:
        name: quay.io/singularity/singularity:v3.10.2
        entrypoint: [""]
    script:
        - mkdir -p $CI_OUTDIR
        - singularity build  --no-https "${CI_OUTDIR}/${DEST}.sif" "docker://${DOCKER_REGISTRY}/${DEST}"
    variables:
        DEST: lfric-v0-gcc-openmpi:latest

